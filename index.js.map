{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\nconst apiKey = \"51422808-09cfa7462dc66736a72b15f6d\";\nconst baseUrl = \"https://pixabay.com/api/\";\n\nexport const fetchImg = (query) => {\n     return axios.get(baseUrl, {\n        params: {\n            key: apiKey,\n            q: query,\n            image_type: \"photo\",\n            orientation: \"horizontal\",\n            safesearch: true\n        }\n    })\n        .then(response => {\n            return response.data.hits\n        });\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector(\".gallery\");\nconst loader = document.querySelector(\".loader-box\");\n\nconst lightbox = new SimpleLightbox('.gallery-item a', {\n    captionsData: \"alt\",\n    captionDelay: 250\n})\n\nexport const createGallery = (img) => {\n    \n    const markupGallery = img.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n        return `\n         <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img\n                class=\"gallery-img\"\n                src=\"${webformatURL}\"\n                alt=\"${tags}\"\n            />\n        </a>\n        <ul class=\"list-description\">\n            <li class=\"description\">\n                <h3 class=\"title\">Likes</h3>\n                <p class=\"text\">${likes}</p>\n            </li>\n            <li class=\"description\">\n                <h3 class=\"title\">Views</h3>\n                <p class=\"text\">${views}</p>\n            </li>\n            <li class=\"description\">\n                <h3 class=\"title\">Comments</h3>\n                <p class=\"text\">${comments}</p>\n            </li>\n            <li class=\"description\">\n                <h3 class=\"title\">Downloads</h3>\n                <p class=\"text\">${downloads}</p>\n            </li>\n        </ul>\n    </li>\n        `\n    }).join(\"\");\n    \n    gallery.insertAdjacentHTML(\"beforeend\", markupGallery);\n\n    lightbox.refresh();\n}\n\nexport const clearGallery = () => {\n    gallery.innerHTML = '';\n}\n\nexport const showLoader = () => {\n    loader.classList.remove(\"hidden\");\n}\n\nexport const hideLoader = () => {\n    loader.classList.add(\"hidden\");\n}","\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport { fetchImg } from \"./js/pixabay-api\";\nimport { createGallery } from \"./js/render-functions\";\nimport { clearGallery } from \"./js/render-functions\";\nimport { showLoader } from \"./js/render-functions\";\nimport { hideLoader } from \"./js/render-functions\";\n\n\n\n\nconst form = document.querySelector(\".form\");\n\n\nform.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n    clearGallery();\n\n    const query = event.target.elements.searchText.value.trim();\n    \n    if (!query) {\nreturn iziToast.error({\n                        title: \"Please enter text\",\n                        position: \"topRight\"\n                    });\n    };\n\n    showLoader()\n\n    \n        fetchImg(query)\n        .then(images => {\n                if (images.length === 0) {\n                    iziToast.error({\n                        title: `Sorry, there are no images matching your search ${query}. Please try again!`,\n                        position: \"topRight\"\n                    });\n                } else {\n                    createGallery(images);\n                };\n            })\n        .catch(error => {\n                iziToast.error({\n                    title: error.message,\n                });\n        })\n            .finally(() => {\n            hideLoader()\n        })\n    \n    form.reset();\n})"],"names":["apiKey","baseUrl","fetchImg","query","axios","response","gallery","loader","lightbox","SimpleLightbox","createGallery","img","markupGallery","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","form","event","iziToast","images","error"],"mappings":"owBAEA,MAAMA,EAAS,qCACTC,EAAU,2BAEHC,EAAYC,GACbC,EAAM,IAAIH,EAAS,CACvB,OAAQ,CACJ,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACf,CACT,CAAK,EACI,KAAKE,GACKA,EAAS,KAAK,IACxB,ECdHC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,aAAa,EAE7CC,EAAW,IAAIC,EAAe,kBAAmB,CACnD,aAAc,MACd,aAAc,GAClB,CAAC,EAEYC,EAAiBC,GAAQ,CAElC,MAAMC,EAAgBD,EAAI,IAAI,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAC1F;AAAA;AAAA,wCAEyBL,CAAa;AAAA;AAAA;AAAA,uBAG9BD,CAAY;AAAA,uBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAMOC,CAAK;AAAA;AAAA;AAAA;AAAA,kCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,kCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,kCAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,SAKtC,EAAE,KAAK,EAAE,EAEVb,EAAQ,mBAAmB,YAAaM,CAAa,EAErDJ,EAAS,QAAO,CACpB,EAEaY,EAAe,IAAM,CAC9Bd,EAAQ,UAAY,EACxB,EAEae,EAAa,IAAM,CAC5Bd,EAAO,UAAU,OAAO,QAAQ,CACpC,EAEae,EAAa,IAAM,CAC5Bf,EAAO,UAAU,IAAI,QAAQ,CACjC,EC/CMgB,EAAO,SAAS,cAAc,OAAO,EAG3CA,EAAK,iBAAiB,SAAWC,GAAU,CACvCA,EAAM,eAAc,EACpBJ,IAEA,MAAMjB,EAAQqB,EAAM,OAAO,SAAS,WAAW,MAAM,OAErD,GAAI,CAACrB,EACT,OAAOsB,EAAS,MAAM,CACE,MAAO,oBACP,SAAU,UAClC,CAAqB,EAGjBJ,EAAY,EAGRnB,EAASC,CAAK,EACb,KAAKuB,GAAU,CACJA,EAAO,SAAW,EAClBD,EAAS,MAAM,CACX,MAAO,mDAAmDtB,CAAK,sBAC/D,SAAU,UAClC,CAAqB,EAEDO,EAAcgB,CAAM,EAE3B,EACJ,MAAMC,GAAS,CACRF,EAAS,MAAM,CACX,MAAOE,EAAM,OACjC,CAAiB,CACjB,CAAS,EACI,QAAQ,IAAM,CACfL,EAAY,CACxB,CAAS,EAELC,EAAK,MAAK,CACd,CAAC"}